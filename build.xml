<!-- $Novell: /ldap/src/jldap/build.xml,v 1.38 2001/05/08 21:07:27 vtag Exp $ -->
<!--
 ******************************************************************************
 * Copyright (C) 1999, 2000, 2001 Novell, Inc. All Rights Reserved.
 *
 * THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
 * TREATIES. USE, MODIFICATION, AND REDISTRIBUTION OF THIS WORK IS SUBJECT
 * TO VERSION 2.0.7 OF THE OPENLDAP PUBLIC LICENSE, A COPY OF WHICH IS
 * AVAILABLE AT HTTP://WWW.OPENLDAP.ORG/LICENSE.HTML OR IN THE FILE "LICENSE"
 * IN THE TOP-LEVEL DIRECTORY OF THE DISTRIBUTION. ANY USE OR EXPLOITATION
 * OF THIS WORK OTHER THAN AS AUTHORIZED IN VERSION 2.0.7 OF THE OPENLDAP
 * PUBLIC LICENSE, OR OTHER PRIOR WRITTEN CONSENT FROM NOVELL, COULD SUBJECT
 * THE PERPETRATOR TO CRIMINAL AND CIVIL LIABILITY.
 ******************************************************************************
-->
<!-- ======================================================================= -->
<!-- TOP level build file                                                    -->
<!-- ======================================================================= -->
<project name="jldap" default="debug" basedir=".">
<!-- Targets                                                                 -->
<!--     clean   - Cleans all generated files and directories in this and    -->
<!--               subbordinate directories                                  -->
<!--     cleanpkg- Cleans pkg directory                                      -->
<!--     doc     - Builds javadoc files                                      -->
<!--               Not available at the lowest directory level               -->
<!--     debug   - Builds debug classes and jar files                        -->
<!--               At the lowest level directory it only compiles java files.-->
<!--     release - Builds release classes and jar files                      -->
<!--               At the lowest level directory it only compiles java files.-->
<!--     lib     - Builds debug & release classes and jar files.             -->
<!--               At the lowest level directory it only compiles java files.-->
<!--     jar     - Synonym for lib                                           -->
<!--     all     - Builds everything possible.  At the top directory level it-->
<!--               builds all, doc, & install.  At one directory level below -->
<!--               the top it builds all, & doc. At the lowest directory     -->
<!--               level it compiles java files for release and debug.       -->
<!--     install - Copies build results from all directories and creates the -->
<!--               pkg directory.  Only available in top makefile            -->
<!--     pkg     - Synonym for install                                       -->

<property name="docsrc" value="."/>
<property name="src" value="."/>
<property name="ldap" value="ldap"/>

<property name="lib" value="lib"/>
<property name="lib.debug" value="lib_debug"/>

<property name="build" value="classes"/>
<property name="build.debug" value="classes_debug"/>
<property name="build.samples" value="classes_samples"/>
<property name="build.tests" value="classes_tests"/>

<property name="doc" value="doc"/>
<property name="doc.developer" value="${doc}"/>

<property name="pkg" value="pkg"/>
<property name="pkg.lib" value="${pkg}/${lib}"/>
<property name="pkg.lib.debug" value="${pkg}/${lib}_debug"/>
<property name="pkg.samples" value="${pkg}/samples"/>
<property name="pkg.doc" value="${pkg}/${doc}"/>
<property name="pkg.apidoc" value="${pkg}/${doc}/api"/>

    <!-- =================================================================== -->
    <!-- Initialization                                                      -->
    <!-- =================================================================== -->
	<target name="init">
		<tstamp/>
	</target>

    <!-- =================================================================== -->
    <!-- all - clean, build debug, release, dist                             -->
    <!-- =================================================================== -->
	<target name="all" depends="init, cleanpkg, lib, tests, samples, doc, install" />

    <!-- =================================================================== -->
    <!-- clean all files                                                     -->
    <!-- =================================================================== -->
	<target name="clean" depends="init, cleancode, cleandoc">
            <echo message="Cleaning files"/>
	</target>

    <!-- =================================================================== -->
    <!-- clean code result files                                             -->
    <!-- =================================================================== -->
	<target name="cleancode" depends="init">
            <echo message="Cleaning files"/>
			<delete file="com/novell/ldap/client/Debug.java"/>
            <delete dir="${lib}"/>
            <delete dir="${lib.debug}"/>
            <delete dir="${build}"/>
            <delete dir="${build.debug}"/>
            <delete dir="${build.samples}"/>
            <delete dir="${build.tests}"/>
	</target>

    <!-- =================================================================== -->
    <!-- clean doc files                                                     -->
    <!-- =================================================================== -->
	<target name="cleandoc" depends="init">
            <echo message="Cleaning files"/>
            <delete dir="${doc}"/>
            <delete dir="${pkg.doc}"/>
	</target>

    <!-- =================================================================== -->
    <!-- clean the pkg directory                                             -->
    <!--       Note: The doc directory is left intact                        -->
	<!--             ant doc will rebuild it                                 -->
    <!-- =================================================================== -->
	<target name="cleanpkg" depends="init">
		<delete dir="${pkg.lib}"/>
		<delete dir="${pkg.lib.debug}"/>
		<delete dir="${pkg.samples}"/>
	</target>

    <!-- =================================================================== -->
    <!-- really clean all files                                              -->
    <!-- =================================================================== -->
	<target name="reallyclean" depends="clean, cleanpkg">
		<delete dir="${pkg}"/>
	</target>

    <!-- =================================================================== -->
    <!-- build debug classes                                                 -->
    <!-- =================================================================== -->
    <target name="debug" depends="init">
		<ant antfile="javac.xml" target="debug">
			<property name="DEBUG_VALUE" value="true"/>
		</ant>
    </target>

    <!-- =================================================================== -->
    <!-- build release classes                                               -->
    <!-- =================================================================== -->
    <target name="release" depends="init">
		<ant antfile="javac.xml" target="release">
			<property name="DEBUG_VALUE" value="false"/>
		</ant>
	</target>

    <!-- =================================================================== -->
    <!-- final is synonym for build release classes                          -->
    <!-- =================================================================== -->
	<target name="final" depends="release" />

    <!-- =================================================================== -->
    <!-- build lib files                                                     -->
    <!-- =================================================================== -->
	<target name="lib" depends="debug, release"/>

    <!-- =================================================================== -->
    <!-- jar is synonym for build lib files                                  -->
    <!-- =================================================================== -->
	<target name="jar" depends="lib"/>

    <!-- =================================================================== -->
    <!-- Create and populate the distribution (pkg) directory                -->
    <!-- =================================================================== -->
	<target name="dist" depends="init">
		<mkdir dir="${src}/${lib}"/>
		<mkdir dir="${src}/${lib.debug}"/>
		<mkdir dir="${pkg.lib}"/>
		<mkdir dir="${pkg.lib.debug}"/>
		<mkdir dir="${pkg.doc}"/>
		<mkdir dir="${pkg.samples}"/>
		<mkdir dir="${pkg.samples}/extensions"/>
		<mkdir dir="${pkg.samples}/controls"/>

		<copy
			todir="${pkg.lib}">
			<fileset dir="${src}/${lib}"/>
		</copy>

		<copy
			todir="${pkg.lib.debug}">
			<fileset dir="${src}/${lib.debug}"/>
		</copy>

		<copy
			todir="${pkg.samples}">
			<fileset dir="${src}/samples"/>
		</copy>

		<copy
			todir="${pkg.samples}/extensions">
			<fileset dir="${src}/samples/extensions"/>
		</copy>

		<copy
			todir="${pkg.samples}/controls">
			<fileset dir="${src}/samples/controls"/>
		</copy>

		<copy
			todir="${pkg.doc}">
			<fileset dir="${src}/ndkdoc"/>
		</copy>

		<copy
        	file="README.txt"
        	tofile="${pkg}/README.txt"
        />
		<copy
        	file="ietf/draft-sermersheim-nds-ldap-schema-01.txt"
        	tofile="${pkg.doc}/draft-sermersheim-nds-ldap-schema-01.txt"
        />
	</target>

    <!-- =================================================================== -->
    <!-- pkg & install are synonyms for create distribution directory        -->
    <!-- =================================================================== -->
	<target name="install" depends="dist"/>
	<target name="pkg" depends="dist"/>

	<!-- =================================================================== -->
	<!-- build test classes                                                  -->
	<!-- =================================================================== -->
	<target name="tests" depends="debug">
		<mkdir dir="${build.tests}/extensions"/>

		<echo message="DEBUG compile tests" />
		<ant dir="tests" target="all">
			<property name="build" value="${build.tests}"/>
			<property name="lib" value="${lib.debug}"/>
			<property name="ldap" value="${ldap}"/>
			<property name="debug" value="on"/>
			<property name="optimize" value="off"/>
		</ant>
	</target>

    <!-- =================================================================== -->
    <!-- create javadoc                                                      -->
    <!-- =================================================================== -->
    <target name="doc" depends="docldap, docdeveloper"/>

	<!-- =================================================================== -->
	<!-- build Sample classes                                                -->
	<!-- =================================================================== -->
    <target name="samples" depends="debug">
	    <mkdir dir="${build.samples}"/>

        <echo message="DEBUG compile samples" />
		<ant dir="${basedir}/samples/" target="all">
			<property name="build" value="${build.samples}"/>
			<property name="lib" value="${lib.debug}"/>
			<property name="debug" value="on"/>
			<property name="optimize" value="off"/>
		</ant>

        <echo message="DEBUG compile samples/extensions" />
		<ant dir="${basedir}/samples/extensions/" target="all">
			<property name="build" value="${build.samples}/extensions"/>
			<property name="lib" value="${lib.debug}"/>
			<property name="debug" value="on"/>
			<property name="optimize" value="off"/>
		</ant>

        <echo message="DEBUG compile samples/controls" />
		<ant dir="${basedir}/samples/controls/" target="all">
			<property name="build" value="${build.samples}/controls"/>
			<property name="lib" value="${lib.debug}"/>
			<property name="debug" value="on"/>
			<property name="optimize" value="off"/>
		</ant>
	</target>

    <!-- =================================================================== -->
    <!-- create javadoc for IETF ldap classes                                -->
    <!-- =================================================================== -->
    <target name="docldap" depends="init, debug">
		<delete dir="${pkg.apidoc}"/>
        <echo message="Creating distribution ldap javadoc"/>
        <mkdir dir="${pkg.apidoc}"/>
        <javadoc
        	sourcepath="${docsrc}"
            destdir="${pkg.apidoc}"
            classpath="${lib.debug}/${ldap}.jar;external/ssl/domestic/nssl1.2_dom.jar;external/jsse/lib/jcert.jar;external/jsse/lib/jnet.jar;external/jsse/lib/jsse.jar"
            packagenames="com.novell.ldap,com.novell.ldap.extensions,com.novell.ldap.controls,com.novell.ldap.asn1,com.novell.ldap.util"
            overview="overview.html"
            nodeprecated="true"
            nodeprecatedlist="true"
            Windowtitle="LDAP Classes"
            Splitindex="true"
            Doctitle="LDAP Classes, Controls, Extensions, and ASN.1"
            Header="&lt;b>LDAP Classes&lt;/b>&lt;br>&lt;font size=-1>Implements Java LDAP&lt;/font>"
            Bottom="&lt;font size=-1>Copyright &#169; 2001 Novell, Inc. All Rights Reserved. &lt;br>Novell, Inc.&lt;br>1800 South Novell Place&lt;br>Provo, Ut 84606&lt;br>Phone: (801) 861-5000&lt;/font>"
        />
    </target>

    <!-- =================================================================== -->
    <!-- create javadoc for all LDAP classes for internal developer use only -->
    <!-- =================================================================== -->
    <target name="docdeveloper" depends="init">
		<delete dir="${pkg.developer}"/>
        <echo message="Creating internal developer ldap javadoc"/>
        <mkdir dir="${doc.developer}"/>
		<filter token="COMPILE_DEBUG" value="true"/>
		<delete file="com/novell/ldap/client/Debug.java"/>
		<copy file="com/novell/ldap/client/Debug.template" tofile="com/novell/ldap/client/Debug.java" filtering="YES"/>
        <javadoc sourcepath="${docsrc}"
            destdir="${doc.developer}"
            classpath="external/ssl/domestic/nssl1.2_dom.jar;external/jsse/lib/jcert.jar;external/jsse/lib/jnet.jar;external/jsse/lib/jsse.jar"
            packagenames="com.novell.ldap,com.novell.ldap.asn1,com.novell.ldap.client,com.novell.ldap.rfc2251,com.novell.ldap.extensions,com.novell.ldap.controls,,com.novell.ldap.util"
            Windowtitle="LDAP Classes"
            Splitindex="true"
            Private="true"
            Doctitle="Novell, Inc. All Java LDAP Classes for Developer Internal Use"
            Header="&lt;b>All LDAP Classes&lt;/b>&lt;br>&lt;font size=-1>Internal LDAP Classes&lt;/font>"
            Bottom="&lt;font size=-1>Copyright &#169; 2001 Novell, Inc. All Rights Reserved. &lt;br>Novell, Inc.&lt;br>       1800 South Novell Place&lt;br>        Provo, Ut 84606&lt;br>       Phone: (801) 861-5000&lt;/font>"
        />
    </target>
</project>
