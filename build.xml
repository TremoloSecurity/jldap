<!-- $OpenLDAP$ -->
<!--
 ******************************************************************************
 * Copyright (C) 1999, 2000, 2001, 2002 Novell, Inc. All Rights Reserved.
 *
 * THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
 * TREATIES. USE, MODIFICATION, AND REDISTRIBUTION OF THIS WORK IS SUBJECT
 * TO VERSION 2.0.1 OF THE OPENLDAP PUBLIC LICENSE, A COPY OF WHICH IS
 * AVAILABLE AT HTTP://WWW.OPENLDAP.ORG/LICENSE.HTML OR IN THE FILE "LICENSE"
 * IN THE TOP-LEVEL DIRECTORY OF THE DISTRIBUTION. ANY USE OR EXPLOITATION
 * OF THIS WORK OTHER THAN AS AUTHORIZED IN VERSION 2.0.1 OF THE OPENLDAP
 * PUBLIC LICENSE, OR OTHER PRIOR WRITTEN CONSENT FROM NOVELL, COULD SUBJECT
 * THE PERPETRATOR TO CRIMINAL AND CIVIL LIABILITY.
 ******************************************************************************
-->
<!-- ======================================================================= -->
<!-- TOP level build file                                                    -->
<!-- ======================================================================= -->
<project name="jldap" default="debug" basedir=".">
<!-- Targets                                                                 -->
<!--     clean   - Cleans all generated files and directories in this and    -->
<!--               subbordinate directories                                  -->
<!--     cleanpkg- Cleans pkg directory                                      -->
<!--     doc     - Builds javadoc files                                      -->
<!--               Not available at the lowest directory level               -->
<!--     debug   - Builds debug classes and jar files                        -->
<!--               At the lowest level directory it only compiles java files.-->
<!--     release - Builds release classes and jar files                      -->
<!--               At the lowest level directory it only compiles java files.-->
<!--     lib     - Builds debug & release classes and jar files.             -->
<!--               At the lowest level directory it only compiles java files.-->
<!--     jar     - Synonym for lib                                           -->
<!--     all     - Builds everything possible.  At the top directory level it-->
<!--               builds all, doc, & install.  At one directory level below -->
<!--               the top it builds all, & doc. At the lowest directory     -->
<!--               level it compiles java files for release and debug.       -->
<!--     install - Copies build results from all directories and creates the -->
<!--               pkg directory.  Only available in top makefile            -->
<!--     pkg     - Synonym for install                                       -->

<property name="docsrc" value="."/>
<property name="src" value="."/>
<property name="ldap" value="ldap"/>

<property name="lib" value="lib"/>
<property name="lib.debug" value="lib_debug"/>

<property name="build" value="classes"/>
<property name="build.debug" value="classes_debug"/>

<property name="doc" value="doc"/>
<property name="ietfdoc" value="ietfdoc"/>
<property name="doc.developer" value="${doc}"/>

<property name="pkg" value="pkg"/>
<property name="pkg.lib" value="${pkg}/${lib}"/>
<property name="pkg.lib.debug" value="${pkg}/${lib}_debug"/>
<property name="pkg.doc" value="${pkg}/${doc}"/>
<property name="pkg.ietfdoc" value="${pkg}/${ietfdoc}"/>
<property name="pkg.wars" value="${pkg}/wars"/>

    <!-- =================================================================== -->
    <!-- Initialization                                                      -->
    <!-- =================================================================== -->
    <target name="init">
        <tstamp/>
    </target>

    <!-- =================================================================== -->
    <!-- all - clean, build debug, release, dist                             -->
    <!-- =================================================================== -->
    <target name="all" depends="init, cleanpkg, lib, doc, install" />

    <!-- =================================================================== -->
    <!-- clean all files                                                     -->
    <!-- =================================================================== -->
    <target name="clean" depends="init, cleancode, cleanwars, cleandoc">
            <echo message="Cleaning files"/>
    </target>

    <!-- =================================================================== -->
    <!-- clean code result files                                             -->
    <!-- =================================================================== -->
    <target name="cleancode" depends="init">
            <echo message="Cleaning files"/>
            <delete file="com/novell/ldap/client/Debug.java"/>
            <delete dir="${lib}"/>
            <delete dir="${lib.debug}"/>
            <delete dir="${build}"/>
            <delete dir="${build.debug}"/>
    </target>

    <!-- =================================================================== -->
    <!-- clean doc files                                                     -->
    <!-- =================================================================== -->
    <target name="cleandoc" depends="init">
            <echo message="Cleaning files"/>
            <delete dir="${doc}"/>
            <delete dir="${pkg.doc}"/>
            <delete dir="${pkg.ietfdoc}"/>
    </target>

    <!-- =================================================================== -->
    <!-- clean the pkg/war directory                                         -->
    <!-- =================================================================== -->
    <target name="cleanpkgwars" depends="init">
        <delete dir="${pkg.wars}"/>
    </target>

    <!-- =================================================================== -->
    <!-- clean the pkg directory                                             -->
    <!--       Note: The doc directory is left intact                        -->
    <!--             ant doc will rebuild it                                 -->
    <!-- =================================================================== -->
    <target name="cleanpkg" depends="init, cleanpkgwars">
        <delete dir="${pkg.lib}"/>
        <delete dir="${pkg.lib.debug}"/>
    </target>

    <!-- =================================================================== -->
    <!-- really clean all files                                              -->
    <!-- =================================================================== -->
    <target name="reallyclean" depends="clean, cleanpkg">
        <delete dir="${pkg}"/>
    </target>

    <!-- =================================================================== -->
    <!-- clean war file                                                      -->
    <!-- =================================================================== -->
    <target name="cleanwars">
        <ant
            dir="com/novell/services/dsml"
            antfile="build.xml"
            target="clean">
            <property name="top" location="."/>
        </ant>
    </target>

    <!-- =================================================================== -->
    <!-- build Servlets                                                       -->
    <!-- =================================================================== -->
    <target name="servlet_stream" depends="debug, release">
        <ant dir="${basedir}/com/novell/services/dsml/stream" target="all">
            <property name="top" location="."/>
        </ant>
    </target>
    <target name="servlet_dom" depends="debug, release">
        <ant dir="${basedir}/com/novell/services/dsml/dom" target="all">
            <property name="top" location="."/>
        </ant>
    </target>

    <!-- =================================================================== -->
    <!-- build war files                                                     -->
    <!-- =================================================================== -->
    <target name="war_stream" depends="servlet_stream">
        <ant
            dir="com/novell/services/dsml/stream"
            antfile="buildwar.xml"
            target="all">
            <property name="top" location="."/>
        </ant>
    </target>
    <target name="war_dom" depends="servlet_dom">
        <ant
            dir="com/novell/services/dsml/dom"
            antfile="buildwar.xml"
            target="all">
            <property name="top" location="."/>
        </ant>
    </target>
    
    <target name="wars" depends="war_stream, war_dom"/>
    
    <target name="clone_wars" depends="wars"/>

    <!-- =================================================================== -->
    <!-- build debug classes                                                 -->
    <!-- =================================================================== -->
    <target name="debug" depends="init">
        <ant antfile="javac.xml" target="debug">
            <property name="DEBUG_VALUE" value="true"/>
        </ant>
    </target>

    <!-- =================================================================== -->
    <!-- build release classes                                               -->
    <!-- =================================================================== -->
    <target name="release" depends="init">
        <ant antfile="javac.xml" target="release">
            <property name="DEBUG_VALUE" value="false"/>
        </ant>
    </target>

    <!-- =================================================================== -->
    <!-- setup for javadoc                                                   -->
    <!-- =================================================================== -->
    <target name="setupDoc" depends="init">
        <ant antfile="javac.xml" target="setupDebug">
            <property name="DEBUG_VALUE" value="true"/>
        </ant>
    </target>

    <!-- =================================================================== -->
    <!-- final is synonym for build release classes                          -->
    <!-- =================================================================== -->
    <target name="final" depends="release" />

    <!-- =================================================================== -->
    <!-- build lib files                                                     -->
    <!-- =================================================================== -->
    <target name="lib" depends="debug, release"/>

    <!-- =================================================================== -->
    <!-- jar is synonym for build lib files                                  -->
    <!-- =================================================================== -->
    <target name="jar" depends="lib"/>

    <!-- =================================================================== -->
    <!-- Create and populate the distribution (pkg) directory                -->
    <!-- =================================================================== -->
    <target name="dist" depends="init">
        <mkdir dir="${src}/${lib}"/>
        <mkdir dir="${src}/${lib.debug}"/>
        <mkdir dir="${pkg.lib}"/>
        <mkdir dir="${pkg.lib.debug}"/>
        <mkdir dir="${pkg.doc}"/>
        <mkdir dir="${pkg.ietfdoc}"/>

        <copy
            todir="${pkg.lib}">
            <fileset dir="${src}/${lib}"/>
        </copy>

        <copy
            todir="${pkg.lib.debug}">
            <fileset dir="${src}/${lib.debug}"/>
        </copy>

        <copy
            file="README"
            tofile="${pkg}/README.txt"
        />
    </target>

    <!-- =================================================================== -->
    <!-- pkg & install are synonyms for create distribution directory        -->
    <!-- =================================================================== -->
    <target name="install" depends="dist"/>
    <target name="pkg" depends="dist"/>

    <!-- =================================================================== -->
    <!-- create javadoc                                                      -->
    <!-- =================================================================== -->
    <target name="doc" depends="docnovellldap, docietfldap, docdeveloper"/>

    <!-- =================================================================== -->
    <!-- create javadoc for Novell ldap classes                              -->
    <!-- =================================================================== -->
    <target name="docnovellldap" depends="init, setupDoc">
        <delete dir="${pkg.doc}"/>
        <echo message="Creating distribution ldap javadoc"/>
        <mkdir dir="${pkg.doc}"/>
        <javadoc
            sourcepath="${docsrc}"
            destdir="${pkg.doc}"
            classpath="${lib.debug}/${ldap}.jar;external/jsse/lib/jcert.jar;external/jsse/lib/jnet.jar;external/jsse/lib/jsse.jar;external/jaxp/jaxp.jar;external/jaxp/xerces.jar"
            packagenames="com.novell.sasl,com.novell.ldap.extensions,com.novell.ldap.controls,com.novell.ldap.asn1,com.novell.ldap.util,com.novell.ldap"
            overview="overview.html"
            Windowtitle="LDAP Classes"
            Splitindex="true"
            Doctitle="LDAP Classes, Controls, Extensions, and ASN.1"
            Header="&lt;b>LDAP Classes&lt;/b>&lt;br>&lt;font size=-1>Implements Java LDAP&lt;/font>"
            Bottom="&lt;font size=-1>Copyright &#169; 2002 Novell, Inc. All Rights Reserved. &lt;br>Novell, Inc.&lt;br>1800 South Novell Place&lt;br>Provo, Ut 84606&lt;br>Phone: (801) 861-5000&lt;/font>"
        />
    </target>

    <!-- =================================================================== -->
    <!-- create javadoc for IETF ldap classes                                -->
    <!-- =================================================================== -->
    <target name="docietfldap" depends="init, setupDoc">
        <delete dir="${pkg.ietfdoc}"/>
        <echo message="Creating distribution ldap javadoc"/>
        <mkdir dir="${pkg.ietfdoc}"/>
        <javadoc
            sourcepath="${docsrc}"
            destdir="${pkg.ietfdoc}"
            classpath="${lib.debug}/${ldap}.jar;external/jsse/lib/jcert.jar;external/jsse/lib/jnet.jar;external/jsse/lib/jsse.jar;external/jaxp/jaxp.jar;external/jaxp/xerces.jar"
            packagenames="org.ietf.ldap"
            overview="overview-ietf.html"
            Windowtitle="LDAP Classes"
            Splitindex="true"
            Doctitle="LDAP Classes, Controls, Extensions, and ASN.1"
            Header="&lt;b>LDAP Classes&lt;/b>&lt;br>&lt;font size=-1>Implements Java LDAP&lt;/font>"
            Bottom="&lt;font size=-1>Copyright &#169; 2002 Novell, Inc. All Rights Reserved. &lt;br>Novell, Inc.&lt;br>1800 South Novell Place&lt;br>Provo, Ut 84606&lt;br>Phone: (801) 861-5000&lt;/font>"
        />
    </target>

    <!-- =================================================================== -->
    <!-- create javadoc for all LDAP classes for internal developer use only -->
    <!-- =================================================================== -->
    <target name="docdeveloper" depends="init, setupDoc">
        <delete dir="${pkg.developer}"/>
        <echo message="Creating internal developer ldap javadoc"/>
        <mkdir dir="${doc.developer}"/>
        <filter token="COMPILE_DEBUG" value="true"/>
        <javadoc sourcepath="${docsrc}"
            destdir="${doc.developer}"
            classpath="${lib.debug}/${ldap}.jar;external/jsse/lib/jcert.jar;external/jsse/lib/jnet.jar;external/jsse/lib/jsse.jar;external/jaxp/jaxp.jar;external/jaxp/xerces.jar"
            packagenames="org.ietf.ldap,com.novell.sasl,com.novell.sasl.client,com.novell.ldap.asn1,com.novell.ldap.client,com.novell.ldap.rfc2251,com.novell.ldap.resources,com.novell.ldap.extensions,com.novell.ldap.controls,com.novell.ldap.util,com.novell.ldap"
            Windowtitle="LDAP Classes"
            Splitindex="true"
            Private="true"
            Doctitle="Novell, Inc. All Java LDAP Classes for Developer Internal Use"
            Header="&lt;b>All LDAP Classes&lt;/b>&lt;br>&lt;font size=-1>Internal LDAP Classes&lt;/font>"
            Bottom="&lt;font size=-1>Copyright &#169; 2002 Novell, Inc. All Rights Reserved. &lt;br>Novell, Inc.&lt;br>       1800 South Novell Place&lt;br>        Provo, Ut 84606&lt;br>       Phone: (801) 861-5000&lt;/font>"
        />
    </target>
</project>
