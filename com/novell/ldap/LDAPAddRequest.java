/* Generated by Together */

package com.novell.ldap.message;

import com.novell.ldap.*;
import com.novell.ldap.asn1.*;
import com.novell.ldap.rfc2251.*;

import java.util.Enumeration;

/* 
 *       AddRequest ::= [APPLICATION 8] SEQUENCE {
 *               entry           LDAPDN,
 *               attributes      AttributeList }
 */
public class LDAPAddRequest extends LDAPMessage
{
    private String dn;
    
    /**
     */
    public LDAPAddRequest( LDAPEntry entry,
                           LDAPConstraints cons)
        throws LDAPException
    {
        super( LDAPMessage.ADD_REQUEST,
               new RfcAddRequest(
                   new RfcLDAPDN(entry.getDN()),
                   getAttrList( entry)),
               (cons != null) ? cons.getControls() : null);
                    
        dn = entry.getDN();
        return;
    }
    
    /**
     * Build the attribuite list from an LDAPEntry
     *
     * @param entry The LDAPEntry
     */
    private static final RfcAttributeList getAttrList( LDAPEntry entry)
    {
        // convert Java-API LDAPEntry to RFC2251 AttributeList
        LDAPAttributeSet attrSet = entry.getAttributeSet();
        RfcAttributeList attrList = new RfcAttributeList(attrSet.size());
        Enumeration enum = attrSet.getAttributes();
        while(enum.hasMoreElements()) {
            LDAPAttribute attr = (LDAPAttribute)enum.nextElement();
            ASN1SetOf vals = new ASN1SetOf(attr.size());
            Enumeration attrEnum = attr.getByteValues();
            while(attrEnum.hasMoreElements()) {
                vals.add(new RfcAttributeValue((byte[])attrEnum.nextElement()));
            }
            attrList.add(new RfcAttributeTypeAndValues(
                new RfcAttributeDescription(attr.getName()), vals));
        }
        return attrList;    
    }
}
