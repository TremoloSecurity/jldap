/* Generated by Together */

package com.novell.ldap.message;

import com.novell.ldap.*;
import com.novell.ldap.rfc2251.*;

/* 
 *       DelRequest ::= [APPLICATION 10] LDAPDN
 */
public class LDAPDeleteRequest extends LDAPMessage
{
    /**
     * Constructs a request to delete an entry from the directory
     *
     * @param dn the dn of the entry to delete
     *
     * @param cons the LDAPConstraints object containing any
     * controls associated with this request.
     */
    public LDAPDeleteRequest( String dn,
                              LDAPConstraints cons)
        throws LDAPException
    {
        super( LDAPMessage.DEL_REQUEST,
               new RfcDelRequest(dn),
               (cons != null) ? cons.getControls() : null);
        return;
    }
    
    /**
     * Returns of the dn of the entry to delete from the directory
     *
     * @return the dn of the entry to delete
     */
    public String getDN()
    {
        return getASN1Object().getRequestDN();
    }        
    
    /**
     * Return an ASN1 representation of this delete request
     *
     * #return an ASN1 representation of this object
     */
    public String toString()
    {
        return getASN1Object().toString();
    }
}
